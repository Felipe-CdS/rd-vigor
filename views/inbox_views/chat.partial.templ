package inbox_views

import (
	"fmt"
	"nugu.dev/rd-vigor/repositories"
)

templ Chat(recipient repositories.User, messages []repositories.Message, chatroomId string) {
	<div
		id="chat-div"
		ws-connect={ fmt.Sprintf("/ws-chatroom/%s", chatroomId) }
		hx-on::ws-after-message="document.getElementById('chatroom').scrollTop = document.getElementById('chatroom').scrollHeight"
		x-show="state == 'chat' || state == 'all'"
		class="flex flex-col w-full h-full text-left bg-white rounded-xl border border-gray-200 border-solid lg:flex lg:w-6/12 2xl:w-8/12 card-shadow"
	>
		<div class="flex items-center py-4 pr-5 pl-2 w-full bg-white rounded-t-xl border-b border-gray-200 border-solid lg:px-5">
			<button
				x-on:click="if(state != 'all'){ state = 'inbox'; }"
				class="lg:hidden"
			>
				<img class="mr-3 rotate-90 size-6" src="/static/img/arrow-down.svg"/>
			</button>
			<div class="flex flex-col w-9/12 text-[#27272A]">
				<h1 class="text-xl truncate">
					{ fmt.Sprintf("%s %s", recipient.FirstName, recipient.LastName) }
				</h1>
				if recipient.CompanyName != "" {
					<div class="flex items-center align-center">
						<img class="inline mr-0.5 opacity-50 size-5" src="/static/img/buildings.svg"/>
						<span class="text-xs truncate">
							{ fmt.Sprintf("(%s)", recipient.CompanyName) }
						</span>
					</div>
				}
			</div>
			<!--
			<button
				x-on:click="if(state != 'all'){ state = 'details'; }"
				title="filtrar"
				class="ml-auto lg:hidden"
			>
				<img class="size-6" src="/static/img/address-book.svg"/>
			</button>
			-->
			<a
				href={ templ.URL(fmt.Sprintf("/user/%s", recipient.Username)) }
				class="ml-auto w-7"
			>
				<img class="opacity-50 size-8" src="/static/img/address-book.svg"/>
			</a>
		</div>
		@MessageSection(messages)
		@chatInputBar(recipient)
	</div>
	@Details(chatroomId)
}

templ MessageSection(messages []repositories.Message) {
	<div
		id="chatroom"
		class="flex overflow-scroll flex-col p-4 space-y-4 w-full font-normal"
	>
		for _, m := range messages {
			@messageBubble(m)
		}
	</div>
}

templ messageBubble(m repositories.Message) {
	<p class="bg-[#ffdfa9] text-sm text-black w-fit px-4 py-2 rounded-xl rounded-tl-none max-w-[50%] break-words shadow-sm">
		{ m.Content }
	</p>
}

templ chatInputBar(recipient repositories.User) {
	<div class="flex relative items-center py-3 px-2 mt-auto space-x-2 w-full bg-white rounded-b-xl border-t border-gray-200 border-solid h-fit">
		<button
			x-on:click="attachmentsOpen = !attachmentsOpen;"
			class="size-6"
		>
			<img class="w-full" src="/static/img/paperclip.svg"/>
		</button>
		@AttachmentsModal(recipient)
		<form
			ws-send
			hx-reset-on-success
			id="message-input-form"
			class="flex items-center w-full h-fit"
		>
			<input
				required
				type="text"
				name="content"
				autocomplete="off"
				x-on:click="attachmentsOpen = false;"
				class="flex py-2 px-5 w-10/12 font-normal bg-gray-200 rounded-full grow"
			/>
			<button
				type="submit"
				class="ml-2 size-6"
			>
				<img class="w-full" src="/static/img/send.svg"/>
			</button>
		</form>
	</div>
}

templ EmptyChat() {
	<div
		id="chat-div"
		hx-trigger="intersect once"
		x-show="state == 'chat' || state == 'all'"
		class="flex flex-col w-full h-full text-left bg-white rounded-xl border border-gray-200 border-solid lg:flex lg:w-6/12 2xl:w-8/12 card-shadow"
	>
		<div class="flex flex-col justify-center items-center p-4 w-full h-full text-center">
			<h1 class="mt-1 text-xl font-semibold text-gray-400">Selecione uma mensagem</h1>
			<h1 class="text-sm font-normal text-gray-400 lg:w-6/12">Escolha de uma das conversas que j√° existem ou comece uma nova.</h1>
			<button
				x-on:click="newChatModalOpen = true;"
				class="mt-3 py-2 px-4 w-fit text-base font-medium rounded-full text-white bg-[#FFBD59]"
			>
				Nova Mensagem
			</button>
		</div>
	</div>
}
