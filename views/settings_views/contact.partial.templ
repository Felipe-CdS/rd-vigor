package settings_views

import (
	"fmt"
	"nugu.dev/rd-vigor/repositories"
)

templ ContactInfoSettings(user repositories.User) {
	<div class="flex overflow-y-scroll flex-col p-5 space-y-3 w-full h-full text-center">
		<h1 class="hidden font-semibold lg:block lg:text-2xl text-start">Informações de contato</h1>
		<button
			x-on:click="state = 'menu'"
			class="font-medium lg:hidden text-start"
		>
			<img class="inline ml-auto w-6 rotate-180" src="/static/img/arrow-right-3.svg"/>
			Voltar
		</button>
		<!-- ############################################################################################### -->
		<div
			x-data="{ edit: false }"
			class="flex flex-col items-start p-5 w-full rounded-xl border border-gray-200"
		>
			<template x-if="!edit">
				<div class="flex flex-col space-y-3 w-full">
					<div class="flex w-full">
						<span class="text-xl font-medium">Conta</span>
						<button
							x-on:click="edit = !edit"
							class="ml-auto"
						>
							<img class="opacity-40 hover:opacity-100 size-6" src="/static/img/edit.svg"/>
						</button>
					</div>
					<span class="text-base font-normal text-start">
						<p class="text-xs opacity-50">Nome de usuário</p>
						{ fmt.Sprintf("%s", user.Username) }
					</span>
					<span class="text-base font-normal text-start">
						<p class="text-xs opacity-50">Nome Completo</p>
						{ fmt.Sprintf("%s %s", user.FirstName, user.LastName) }
					</span>
					<span class="text-base font-normal text-start">
						<p class="text-xs opacity-50">E-mail</p>
						{ fmt.Sprintf("%s", user.Email) }
					</span>
					<span class="text-base font-normal text-start">
						<p class="text-xs opacity-50">Nome da empresa</p>
						RD Vigor
					</span>
				</div>
			</template>
			<template x-if="edit" x-init="$watch('edit', () => htmx.process(htmx.find('#contact-info-form')))">
				<div
					class="flex flex-col space-y-3 w-full"
				>
					<div class="flex w-full">
						<span class="text-xl font-medium">Conta</span>
						<button
							x-on:click="edit = !edit"
							class="ml-auto"
						>
							<img class="opacity-40 hover:opacity-100 size-8" src="/static/img/close.svg"/>
						</button>
					</div>
					<form
						id="contact-info-form"
						hx-post="/settings/contact-info/account"
						hx-target="#generic-settings-div"
						hx-target-error="#error-alert"
						class="flex flex-col space-y-3 w-full"
					>
						<div class="flex flex-col justify-between items-center space-y-3 w-full md:flex-row md:space-y-0 md:space-x-3">
							<label class="text-sm font-normal text-left text-gray-500 lg:w-1/2">
								Primeiro Nome
								<input
									type="text"
									name="first_name"
									placeholder="Primeiro Nome"
									value={ fmt.Sprintf("%s", user.FirstName) }
									class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
								/>
							</label>
							<label class="text-sm font-normal text-left text-gray-500 lg:w-1/2">
								Sobrenome
								<input
									type="text"
									name="last_name"
									placeholder="Sobrenome"
									value={ fmt.Sprintf("%s", user.LastName) }
									class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
								/>
							</label>
						</div>
						<label class="text-sm font-normal text-left text-gray-500">
							Nome de Usuário
							<input
								type="text"
								name="username"
								value={ fmt.Sprintf("%s", user.Username) }
								class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
							/>
						</label>
						<label class="text-sm font-normal text-left text-gray-500">
							Email
							<input
								type="text"
								name="email"
								placeholder="E-mail"
								value={ fmt.Sprintf("%s", user.Email) }
								class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
							/>
						</label>
						<span id="error-alert"></span>
						<div class="flex space-x-3">
							<button
								type="submit"
								class="py-1 px-3 w-fit font-normal text-base rounded-md text-white bg-[#FFBD59]"
							>
								Atualizar
							</button>
							<button
								x-on:click="edit = !edit"
								class="text-base font-normal w-fit"
							>
								Cancelar
							</button>
						</div>
					</form>
				</div>
			</template>
		</div>
		<!-- ############################################################################################### -->
		<div
			x-data="{ edit: false }"
			class="flex flex-col items-start p-5 w-full rounded-xl border border-gray-200"
		>
			<template x-if="!edit">
				<div class="flex flex-col space-y-3 w-full">
					<div class="flex w-full">
						<span class="text-xl font-medium">Localização</span>
						<button
							x-on:click="edit = !edit"
							class="ml-auto"
						>
							<img class="opacity-40 hover:opacity-100 size-6" src="/static/img/edit.svg"/>
						</button>
					</div>
					<span class="text-base font-normal text-start">
						<p class="text-xs opacity-50">Endereço/Complemento</p>
						{ fmt.Sprintf("%s %s", user.Address, user.Address2) }
					</span>
					<span class="text-base font-normal text-start">
						<p class="text-xs opacity-50">Cidade/Estado</p>
						{ fmt.Sprintf("%s %s", user.City, user.State) }
					</span>
					<span class="text-base font-normal text-start">
						<p class="text-xs opacity-50">CEP</p>
						{ fmt.Sprintf("%s", user.Zipcode) }
					</span>
					<span class="text-base font-normal text-start">
						<p class="text-xs opacity-50">Telefone</p>
						{ fmt.Sprintf("%s", user.Telephone) }
					</span>
				</div>
			</template>
			<template x-if="edit" x-init="$watch('edit', () => htmx.process(htmx.find('#location-info-form')))">
				<div class="flex flex-col space-y-3 w-full">
					<div class="flex w-full">
						<span class="text-xl font-medium">Localização</span>
						<button
							x-on:click="edit = !edit"
							class="ml-auto"
						>
							<img class="opacity-40 hover:opacity-100 size-8" src="/static/img/close.svg"/>
						</button>
					</div>
					<form
						id="location-info-form"
						hx-post="/settings/contact-info/location"
						hx-target="#generic-settings-div"
						hx-target-error="#error-alert"
						class="flex flex-col space-y-3 w-full"
					>
						<div class="flex flex-col justify-between items-center space-y-3 w-full md:flex-row md:space-y-0 md:space-x-3">
							<label class="text-sm font-normal text-left text-gray-500 lg:w-1/2">
								Endereço
								<input
									type="text"
									name="address"
									value={ fmt.Sprintf("%s", user.Address) }
									class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
								/>
							</label>
							<label class="text-sm font-normal text-left text-gray-500 lg:w-1/2">
								Complemento
								<input
									type="text"
									name="address2"
									value={ fmt.Sprintf("%s", user.Address2) }
									class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
								/>
							</label>
						</div>
						<div class="flex flex-col justify-between items-center space-y-3 w-full md:flex-row md:space-y-0 md:space-x-3">
							<label class="text-sm font-normal text-left text-gray-500 lg:w-1/2">
								Cidade
								<input
									type="text"
									name="city"
									value={ fmt.Sprintf("%s", user.City) }
									class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
								/>
							</label>
							<label class="text-sm font-normal text-left text-gray-500 lg:w-1/2">
								Estado
								<input
									type="text"
									name="state"
									value={ fmt.Sprintf("%s", user.State) }
									class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
								/>
							</label>
						</div>
						<label class="text-sm font-normal text-left text-gray-500">
							CEP
							<input
								type="text"
								name="zipcode"
								value={ fmt.Sprintf("%s", user.Zipcode) }
								class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
							/>
						</label>
						<label class="text-sm font-normal text-left text-gray-500">
							Telefone
							<input
								type="text"
								name="telephone"
								value={ fmt.Sprintf("%s", user.Telephone) }
								class="py-3 px-4 mt-1 w-full text-base text-black rounded-md border border-gray-200 border-solid"
							/>
						</label>
						<span id="error-alert"></span>
						<div class="flex space-x-3">
							<button
								type="submit"
								data-loading-disable
								data-loading-class="hidden"
								class="py-1 px-3 w-fit font-normal text-base rounded-md text-white bg-[#FFBD59]"
							>
								Atualizar
							</button>
							<button
								x-on:click="edit = !edit"
								class="text-base font-normal w-fit"
							>
								Cancelar
							</button>
						</div>
					</form>
				</div>
			</template>
		</div>
	</div>
}
